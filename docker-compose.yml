version: '2.23.3-desktop.2'
services:

  api:
    build:
      context: .
    env_file:
      - .env-docker
    container_name: fast_api
    command: ["/fastapp/docker/app.sh"]
    ports:
      - "8000:8000"
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/health"]
      interval: 10s
      timeout: 10s
      retries: 3


  db:
    image: postgres:15.1-alpine
    container_name: db
    command: -p 5454
    expose:
      - 5454
    env_file:
      - .env-docker

  redis:
    image: redis:7
    container_name: redis_db
    command: --port 6379
    expose:
      - 6379

  celery-beat:
    container_name: cel_b
    build:
      context: .
    env_file:
      - .env-docker
    depends_on:
      - rabbitmq
      - db
      - api
      - redis
    command: [ "celery", "-A", "celer:celery_app", "beat", "--loglevel=info" ]

  celery_worker:
    container_name: cel
    build:
      context: .
    env_file:
      - .env-docker
    depends_on:
      - rabbitmq
      - db
      - api
      - redis
    command: [ "celery", "-A", "celer:celery_app", "worker", "--loglevel=info", "--concurrency", "1", "-P", "solo" ]

  rabbitmq:
    container_name: rabbit
    image: "rabbitmq:management"
    env_file:
      - .env-docker
    hostname: 'rabbitmq'
